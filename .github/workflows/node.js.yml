name: Node.js CI & Docker Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run build
      run: npm run build --if-present

    - name: Run tests
      run: npm test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t vaishnavi681/my-node-app:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push vaishnavi681/my-node-app:latest

    - name: Deploy to your server (Optional, example with AWS ECS)
      run: |
        # Replace with the deployment logic (e.g., AWS ECS or DigitalOcean)
        echo "Deploying Docker container"
        # Example AWS ECS deployment steps:
        # aws ecs update-service ----cluster your-cluster-name --service your-service-name --force-new-deployment
